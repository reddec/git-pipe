// Code generated by "stringer -type LauncherEvent -trimprefix LauncherEvent"; DO NOT EDIT.

package core

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LauncherEventScheduled-1]
	_ = x[LauncherEventCreated-2]
	_ = x[LauncherEventCreateFailed-4]
	_ = x[LauncherEventReady-8]
	_ = x[LauncherEventRunFailed-16]
	_ = x[LauncherEventStopped-32]
	_ = x[LauncherEventRemoved-64]
	_ = x[LauncherEventRemoveFailed-128]
}

const (
	_LauncherEvent_name_0 = "ScheduledCreated"
	_LauncherEvent_name_1 = "CreateFailed"
	_LauncherEvent_name_2 = "Ready"
	_LauncherEvent_name_3 = "RunFailed"
	_LauncherEvent_name_4 = "Stopped"
	_LauncherEvent_name_5 = "Removed"
	_LauncherEvent_name_6 = "RemoveFailed"
)

var (
	_LauncherEvent_index_0 = [...]uint8{0, 9, 16}
)

func (i LauncherEvent) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _LauncherEvent_name_0[_LauncherEvent_index_0[i]:_LauncherEvent_index_0[i+1]]
	case i == 4:
		return _LauncherEvent_name_1
	case i == 8:
		return _LauncherEvent_name_2
	case i == 16:
		return _LauncherEvent_name_3
	case i == 32:
		return _LauncherEvent_name_4
	case i == 64:
		return _LauncherEvent_name_5
	case i == 128:
		return _LauncherEvent_name_6
	default:
		return "LauncherEvent(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
